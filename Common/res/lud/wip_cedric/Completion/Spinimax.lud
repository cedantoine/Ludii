(define "MinMajStacking"
	(if 
		(and (is Flat (site)) (and {(< (count SitesPlatformBelow P1) (count SitesPlatformBelow P2)) (< (count SitesPlatformBelow P1) (count SitesPlatformBelow P3))}))
		(add (piece "Ball1") (to (site)))
		(if 
			(and (is Flat (site)) (and {(< (count SitesPlatformBelow P2) (count SitesPlatformBelow P1)) (< (count SitesPlatformBelow P2) (count SitesPlatformBelow P3))}))
			(add (piece "Ball2") (to (site)))
			(if 
				(and (is Flat (site)) (and {(< (count SitesPlatformBelow P3) (count SitesPlatformBelow P1)) (< (count SitesPlatformBelow P3) (count SitesPlatformBelow P2))}))
				(add (piece "Ball3") (to (site)))
				(if 
					(and (is Flat (site)) (and {(> (count SitesPlatformBelow P1) (count SitesPlatformBelow P2)) (> (count SitesPlatformBelow P1) (count SitesPlatformBelow P3))}))
					(add (piece "Ball1") (to (site)))
					(if 
						(and (is Flat (site)) (and {(> (count SitesPlatformBelow P2) (count SitesPlatformBelow P1)) (> (count SitesPlatformBelow P2) (count SitesPlatformBelow P3))}))
						(add (piece "Ball2") (to (site)))
						(if 
							(and (is Flat (site)) (and {(> (count SitesPlatformBelow P3) (count SitesPlatformBelow P1)) (> (count SitesPlatformBelow P3) (count SitesPlatformBelow P2))}))
							(add (piece "Ball3") (to (site)))
						)
					)
				)
			)
		)
	)
)

(define "StackIfPlatform"

	(forEach Site
		(sites Layer 1)
		"MinMajStacking"
		(then 
			(forEach Site
				(sites Layer 2)
				"MinMajStacking"
				(then 
					(forEach Site
						(sites Layer 3)
						"MinMajStacking"
					)
				)
			)
		)
	)	
)

//------------------------------------------------------------------------------

(game "Spinimax" 
    (players 3) 
    (equipment { 
        (board (square 4 pyramidal:True) use:Vertex) 
        (piece "Ball" Each)
    }) 
    
    (rules 
    	(play 
			(move Add
	    		(to 
	    			(sites Empty) 
	    			if:(is Flat)
	    		)
	    		(then
    				"StackIfPlatform"
    			)
	    	)
    	)

    	(end {
    		(if 
    			(and (= (count Pieces in:(sites Occupied by:All)) 30) (= (who at:15) 1))
        		(result P1 Win)
            )
    		(if 
    			(and (= (count Pieces in:(sites Occupied by:All)) 30) (= (who at:15) 2))
        		(result P2 Win)
            )
    		(if 
    			(and (= (count Pieces in:(sites Occupied by:All)) 30) (= (who at:15) 3))
        		(result P3 Win)
            )
    	})
    )
)

//------------------------------------------------------------------------------

(metadata 
		
		(info
				{
				(description "Spinimax is a three-player game for the Shibumi set.")
				(rules "The board starts empty. Players take turns adding a piece of their colour to an empty board cell. Whenever a 2x2 platform is formed, at any level, then a piece is placed on top, its colour being the minority colour in the 2x2 platform (if any) otherwise the majority colour. The winner is the owner of the piece placed at the apex of the pyramid on the final move.")
				(source "<a href=\"http://www.nestorgames.com/rulebooks/SHIBUMI_EN.pdf\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\">SHIBUMI Rulebook</a>")
			    (version "1.0.0")
			    (classification "wip_cedric/Connection")
			    (author "Cameron Browne")
			    (publisher "Computational Creativity Group, nestorgames")
			    (credit "CÃ©dric Antoine")
			    (date "2011")
				}
			)
    
		(graphics {
	        (piece Scale "Ball" 1.0)
	        (board Style Shibumi)
	        (piece Colour P1 fillColour:(colour White))
	        (piece Colour P2 fillColour:(colour Black))
	        (piece Colour P3 fillColour:(colour Red))
	    })
       
)