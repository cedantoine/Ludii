(define "IsAdjacentInPerimeter"
	(or {
		(and (is In (site) (sites Perimeter)) (not (is In (last To) (sites Perimeter))))
		(and (is In (site) (sites Top)) (is In (last To) (difference (sites Left) (sites Corners))))
		(and (is In (site) (sites Left)) (is In (last To) (difference (sites Top) (sites Corners))))
		(and (is In (site) (sites Top)) (is In (last To) (difference (sites Right) (sites Corners))))
		(and (is In (site) (sites Right)) (is In (last To) (difference (sites Top) (sites Corners))))
		(and (is In (site) (sites Bottom)) (is In (last To) (difference (sites Left) (sites Corners))))
		(and (is In (site) (sites Left)) (is In (last To) (difference (sites Bottom) (sites Corners))))
		(and (is In (site) (sites Bottom)) (is In (last To) (difference (sites Right) (sites Corners))))
		(and (is In (site) (sites Right)) (is In (last To) (difference (sites Bottom) (sites Corners))))
	})
)

//------------------------------------------------------------------------------

(game "Gekitai" 
    (players 2) 
    (equipment { 
        (board (square 6))
        (hand Each)
        (piece "Marker" Each) 
    })
    
    (rules 
    	(start (place "Marker" "Hand" count:8))
        (play 
        	(move 
        		(from (handSite Mover)) 
                (to (sites Empty))
        		(then
        			(forEach
						Site
							(sites Around (last To))
							(if 
								(not (is Empty (site)))
								(if  
									"IsAdjacentInPerimeter"
									(if 
										(= (what at:(site)) (id "Marker1"))
										(move 
											(from (site)) 
											(to (handSite 1))
										)
										(move 
											(from (site)) 
											(to (handSite 2))
										)
									)
									(move Step
										(from (site))
										(directions Cell from:(last To) to:(site))
										(to if: 
											(is Empty (to))
										)
									)
								)
							)
					)
        		)
			)
        ) 
	
        (end {
        	(if (and (is Line 3 throughAny:(sites Occupied by:Mover) Mover) (is Line 3 throughAny:(sites Occupied by:Next) Next)) (result All Draw))
        	(if (and (= (count Pieces Mover in:(sites Occupied by:Mover container:"Board")) 8) (is Line 3 throughAny:(sites Occupied by:Next) Next)) (result All Draw))
        	(if (is Line 3 throughAny:(sites Occupied by:Mover) Mover) (result Mover Win))
        	(if (is Line 3 throughAny:(sites Occupied by:Next) Next) (result Next Win))
            (if (= (count Pieces Mover in:(sites Occupied by:Mover container:"Board")) 8) (result Mover Win)) 
        }) 
    )
)


//------------------------------------------------------------------------------

(metadata 
  
  (info
      {
      (description "Gekitai is an abstract strategy game with very minimal rules. The phrase, “easy to learn, but hard to master” is very overdone, but it certainly applies here. For those that are wondering, the term, “Gekitai” is Japanese for “Repel.” You will see why this nomenclature is perfect for this game soon.")
      (aliases {"Repel" "Push Away"})
      (rules "Gekitai is a 3-in-a-row game played on a 6x6 grid. Each player has eight colored markers and takes turns placing them anywhere on any open space on the board. When placed, a marker pushes all adjacent pieces outwards one space if there is an open space for it to move to (or off the board). Pieces shoved off the board are returned to the player. If there is not an open space on the opposite side of the pushed piece, it does not push (a newly played piece cannot push two or more other lined-up pieces). The first player to either line up three of their color in a row at the end of their turn (after pushing) OR have all eight of their markers on the board (also after pushing) wins.")
      (version "1.0.0")
      (classification "wip_cedric")  //->"board/space/line"
      (credit "Cedric Antoine")
      }
  )
  
)
