(game "Span" 
    (players 2) 
    (equipment { 
        (board (square 4 pyramidal:True) use:Vertex) 
        (piece "Ball" Each)
    }) 
    
    (rules 
    	(play 
    		(move Add 
    			(to 
    				(sites Empty) 
    	            if:(is Flat)
    	        )
    		)
    	)
        (end { //add visibility condition
            (if
            	(and {
            		(= (who at:(last To)) 2) 
            		(> (size Array (array (intersection (sites Top) (sites Group Vertex at:(last To) isVisible:True)))) 0) 
            		(> (size Array (array (intersection (sites Bottom) (sites Group Vertex at:(last To) isVisible:True)))) 0)
            	})
            	(result Mover Win)
            )
            (if
                (and {
                	(= (who at:(last To)) 1) 
                	(> (size Array (array (intersection (sites Right) (sites Group Vertex at:(last To) isVisible:True)))) 0) 
                	(> (size Array (array (intersection (sites Left) (sites Group Vertex at:(last To) isVisible:True)))) 0)
                })
                (result Mover Win)
            )
        })
    )
)

//------------------------------------------------------------------------------

(metadata 
		
	(info
		{
		(description "Span is a two-player connection game for the Shibumi set.")
		(rules "The board is initially empty. White owns the left and right sides, and Black owns the top and bottom sides. Players take turns adding a piece of their colour until the board is full. The game is won by the player with a visibly connected path of their pieces between their sides.")
		(source "<a href=\"http://www.nestorgames.com/rulebooks/SHIBUMI_EN.pdf\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\">SHIBUMI Rulebook</a>")
	    (version "1.0.0")
	    (classification "wip_cedric/Connection")
	    (author "Avri Klemer")
	    (publisher "Computational Creativity Group, nestorgames")
	    (credit "CÃ©dric Antoine")
	    (date "2011")
		}
	)
    
    (graphics {
        (piece Scale "Ball" 1.0)
        (board Style Shibumi)
		(piece Colour P1 fillColour:(colour White))
		(piece Colour P2 fillColour:(colour Black))
    })
       
)